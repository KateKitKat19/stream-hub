{"version":3,"file":"static/js/275.95c22a46.chunk.js","mappings":"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","sources":["helpers/yupValidation.js","../node_modules/@chakra-ui/textarea/dist/chunk-OEQDSMWZ.mjs","../node_modules/@chakra-ui/select/dist/chunk-HQIEHZYI.mjs","../node_modules/@chakra-ui/select/dist/chunk-GJO77I2I.mjs","components/SubmissionForm/SubmissionForm.jsx","pages/JoinPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const validateRegistration = Yup.object({\n  firstName: Yup.string()\n    .min(3, 'Name should have at least 3 characters')\n    .required('Name is required!'),\n  lastName: Yup.string(),\n  email: Yup.string().email('Email is invalid!').required('Email is required!'),\n  password: Yup.string()\n    .min(5, 'Password must be minimum 5 digits!')\n    .required('Password is required!'),\n});\n\nexport const validateLogin = Yup.object({\n  email: Yup.string().email('Email is invalid!').required('Email is required!'),\n  password: Yup.string()\n    .min(5, 'Password must be minimum 5 digits!')\n    .required('Password is required!'),\n});\n\nexport const validateSubmission = Yup.object({\n  name: Yup.string()\n    .min(3, 'Name should have at least 3 characters')\n    .max(20, 'Name should be no more than 20 characters')\n    .required('Name is required!'),\n  description: Yup.string()\n    .min(3, 'Description must be minimum 3 digits!')\n    .max(500, 'Description should have at most 500 characters!')\n    .required('Description is required!'),\n  platform: Yup.string(),\n});\n","// src/textarea.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/textarea.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\nvar Textarea = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Textarea\", props);\n  const { className, rows, ...rest } = omitThemingProps(props);\n  const textareaProps = useFormControl(rest);\n  const textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /* @__PURE__ */ jsx(\n    chakra.textarea,\n    {\n      ref,\n      rows,\n      ...textareaProps,\n      className: cx(\"chakra-textarea\", className),\n      __css: textareaStyles\n    }\n  );\n});\nTextarea.displayName = \"Textarea\";\n\nexport {\n  Textarea\n};\n","// src/select-field.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar SelectField = forwardRef(\n  function SelectField2(props, ref) {\n    const { children, placeholder, className, ...rest } = props;\n    return /* @__PURE__ */ jsxs(\n      chakra.select,\n      {\n        ...rest,\n        ref,\n        className: cx(\"chakra-select\", className),\n        children: [\n          placeholder && /* @__PURE__ */ jsx(\"option\", { value: \"\", children: placeholder }),\n          children\n        ]\n      }\n    );\n  }\n);\nSelectField.displayName = \"SelectField\";\n\nexport {\n  SelectField\n};\n","import {\n  SelectField\n} from \"./chunk-HQIEHZYI.mjs\";\n\n// src/select.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  layoutPropNames,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { dataAttr } from \"@chakra-ui/shared-utils\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction split(object, keys) {\n  const picked = {};\n  const omitted = {};\n  for (const [key, value] of Object.entries(object)) {\n    if (keys.includes(key))\n      picked[key] = value;\n    else\n      omitted[key] = value;\n  }\n  return [picked, omitted];\n}\n\n// src/select.tsx\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Select = forwardRef((props, ref) => {\n  var _a;\n  const styles = useMultiStyleConfig(\"Select\", props);\n  const {\n    rootProps,\n    placeholder,\n    icon,\n    color,\n    height,\n    h,\n    minH,\n    minHeight,\n    iconColor,\n    iconSize,\n    ...rest\n  } = omitThemingProps(props);\n  const [layoutProps, otherProps] = split(rest, layoutPropNames);\n  const ownProps = useFormControl(otherProps);\n  const rootStyles = {\n    width: \"100%\",\n    height: \"fit-content\",\n    position: \"relative\",\n    color\n  };\n  const fieldStyles = {\n    paddingEnd: \"2rem\",\n    ...styles.field,\n    _focus: {\n      zIndex: \"unset\",\n      ...(_a = styles.field) == null ? void 0 : _a[\"_focus\"]\n    }\n  };\n  return /* @__PURE__ */ jsxs(\n    chakra.div,\n    {\n      className: \"chakra-select__wrapper\",\n      __css: rootStyles,\n      ...layoutProps,\n      ...rootProps,\n      children: [\n        /* @__PURE__ */ jsx(\n          SelectField,\n          {\n            ref,\n            height: h != null ? h : height,\n            minH: minH != null ? minH : minHeight,\n            placeholder,\n            ...ownProps,\n            __css: fieldStyles,\n            children: props.children\n          }\n        ),\n        /* @__PURE__ */ jsx(\n          SelectIcon,\n          {\n            \"data-disabled\": dataAttr(ownProps.disabled),\n            ...(iconColor || color) && { color: iconColor || color },\n            __css: styles.icon,\n            ...iconSize && { fontSize: iconSize },\n            children: icon\n          }\n        )\n      ]\n    }\n  );\n});\nSelect.displayName = \"Select\";\nvar DefaultIcon = (props) => /* @__PURE__ */ jsx(\"svg\", { viewBox: \"0 0 24 24\", ...props, children: /* @__PURE__ */ jsx(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n  }\n) });\nvar IconWrapper = chakra(\"div\", {\n  baseStyle: {\n    position: \"absolute\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    pointerEvents: \"none\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  }\n});\nvar SelectIcon = (props) => {\n  const { children = /* @__PURE__ */ jsx(DefaultIcon, {}), ...rest } = props;\n  const clone = cloneElement(children, {\n    role: \"presentation\",\n    className: \"chakra-select__icon\",\n    focusable: false,\n    \"aria-hidden\": true,\n    style: {\n      width: \"1em\",\n      height: \"1em\",\n      color: \"currentColor\"\n    }\n  });\n  return /* @__PURE__ */ jsx(IconWrapper, { ...rest, className: \"chakra-select__icon-wrapper\", children: isValidElement(children) ? clone : null });\n};\nSelectIcon.displayName = \"SelectIcon\";\n\nexport {\n  Select,\n  DefaultIcon\n};\n","import { useDispatch } from 'react-redux';\nimport { addStreamer } from 'redux/streamers/operations';\nimport { validateSubmission } from 'helpers/yupValidation';\nimport { Formik, Field, ErrorMessage } from 'formik';\n\nimport {\n  Flex,\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  Textarea,\n  Stack,\n  Button,\n  Heading,\n  Text,\n  Select,\n} from '@chakra-ui/react';\nimport { useNavigate } from 'react-router-dom';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const initialValues = {\n    name: '',\n    description: '',\n    platform: '',\n  };\n\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    dispatch(\n      addStreamer({\n        name: values.name,\n        description: values.description,\n        platform: values.platform ? values.platform : 'Twitch',\n      })\n    )\n      .unwrap()\n      .then(setSubmitting(false))\n      .then(navigate('/streamers'));\n    resetForm();\n  };\n\n  return (\n    <Flex minH={'200px'} align={'center'} justify={'center'} borderRadius={'4'}>\n      <Stack spacing={4} mx={'auto'} maxW={'lg'} py={6} px={6} align={'center'}>\n        <Stack align={'center'}>\n          <Heading fontSize={'2xl'} textAlign={'center'} color={'#183642'}>\n            Fill in the form to join us\n          </Heading>\n        </Stack>\n        <Box\n          rounded={'lg'}\n          bg={'white'}\n          boxShadow={'lg'}\n          p={4}\n          w={'400px'}\n          mt={6}\n        >\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validateSubmission}\n            onSubmit={handleSubmit}\n          >\n            {({ handleSubmit, isSubmitting }) => (\n              <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                  <FormControl id=\"name\" isRequired>\n                    <FormLabel>Your name: </FormLabel>\n                    <Field name=\"name\" as={Input} type=\"text\" />\n                    <ErrorMessage\n                      name=\"name\"\n                      component={Text}\n                      color=\"red.500\"\n                    />\n                  </FormControl>\n                  <FormControl id=\"description\" isRequired>\n                    <FormLabel>Description: </FormLabel>\n                    <Field\n                      name=\"description\"\n                      as={Textarea}\n                      type=\"text\"\n                      placeholder=\"Tell us about yourself\"\n                    />\n                    <ErrorMessage\n                      name=\"description\"\n                      component={Text}\n                      color=\"red.500\"\n                    />\n                  </FormControl>\n                  <FormControl id=\"platform\">\n                    <Field as={Select} name=\"platform\" size=\"md\">\n                      <option value=\"Twitch\">Twitch</option>\n                      <option value=\"YouTube\">YouTube</option>\n                      <option value=\"TikTok\">TikTok</option>\n                      <option value=\"Kick\">Kick</option>\n                      <option value=\"Rumble\">Rumble</option>\n                    </Field>\n                  </FormControl>\n                  <Stack spacing={10} pt={2}>\n                    <Button\n                      type=\"submit\"\n                      isLoading={isSubmitting}\n                      loadingText=\"Submitting\"\n                      size=\"lg\"\n                      bg={'teal.400'}\n                      color={'white'}\n                      _hover={{\n                        bg: 'teal.500',\n                      }}\n                      onClick={handleSubmit}\n                    >\n                      Submit\n                    </Button>\n                  </Stack>\n                </Stack>\n              </form>\n            )}\n          </Formik>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n};\n","import { Box } from '@chakra-ui/react';\nimport { Form } from 'components/SubmissionForm/SubmissionForm';\nexport default function JoinPage ()  {\n  return (\n    <Box p={6}>\n      <Form></Form>\n    </Box>\n  );\n};\n\n"],"names":["validateRegistration","Yup","firstName","min","required","lastName","email","password","validateLogin","validateSubmission","name","max","description","platform","omitted","Textarea","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","className","rows","rest","textareaProps","useFormControl","textareaStyles","object","keysToOmit","clone","Object","assign","key","omit","jsx","chakra","cx","__css","displayName","SelectField","children","placeholder","jsxs","value","Select","_a","useMultiStyleConfig","rootProps","icon","color","height","h","minH","minHeight","iconColor","iconSize","keys","picked","entries","includes","split","layoutPropNames","layoutProps","otherProps","ownProps","rootStyles","width","position","fieldStyles","paddingEnd","field","_focus","zIndex","SelectIcon","dataAttr","disabled","fontSize","DefaultIcon","viewBox","fill","d","IconWrapper","baseStyle","display","alignItems","justifyContent","pointerEvents","top","transform","cloneElement","role","focusable","style","isValidElement","Form","dispatch","useDispatch","navigate","useNavigate","align","justify","borderRadius","spacing","mx","maxW","py","px","textAlign","rounded","bg","boxShadow","p","w","mt","initialValues","validationSchema","onSubmit","values","setSubmitting","resetForm","addStreamer","unwrap","then","handleSubmit","isSubmitting","id","isRequired","as","Input","type","component","Text","size","pt","isLoading","loadingText","_hover","onClick","JoinPage"],"sourceRoot":""}