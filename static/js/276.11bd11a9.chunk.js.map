{"version":3,"file":"static/js/276.11bd11a9.chunk.js","mappings":"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","sources":["components/DetailedInfo/DetailedInfo.jsx","pages/Streamer.jsx","redux/streamers/selectors.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { upvoteStreamer, downvoteStreamer } from 'redux/streamers/operations';\nimport {\n  Center,\n  Box,\n  Image,\n  Flex,\n  Heading,\n  Text,\n  Button,\n} from '@chakra-ui/react';\nimport { BiLike, BiDislike } from 'react-icons/bi';\n\nexport const DetailedInfo = ({ streamerInfo }) => {\n  const dispatch = useDispatch();\n\n  const { image, name, description, platform, _id, upvotes, downvotes } =\n    streamerInfo;\n  return (\n    <Flex\n      direction={{ base: 'column', lg: 'row' }}\n      w={'100%'}\n      alignItems=\"stretch\"\n      justifyContent=\"center\"\n      p={6}\n      mt={8}\n    >\n      <Image\n        boxSize={'100%'}\n        borderRadius={'2xl'}\n        src={image}\n        alt={name}\n        objectFit=\"contain\"\n        boxShadow=\"xs\"\n        fallbackSrc=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3f/Placeholder_view_vector.svg/1280px-Placeholder_view_vector.svg.png\"\n      ></Image>\n\n      <Flex\n        flexDir={'column'}\n        gap={6}\n        p={'10'}\n        width={'100%'}\n        fontFamily={'Lora'}\n      >\n        <Heading color={'blue.700'}>{name}</Heading>\n        <Box>\n          <Text fontSize={18}>Streams on</Text>\n          <Heading fontSize={32} color={'blue.700'}>\n            {' '}\n            {platform}\n          </Heading>\n        </Box>\n        <Box flexGrow={1} maxW={'600px'}>\n          <Text fontSize={'lg'}>{description}</Text>\n        </Box>\n\n        <Center w={'100%'} justifyContent={'space-around'}>\n          <Box display={'flex'} gap={4} flexDir={'column'}>\n            <Button\n              size={'lg'}\n              variant={'solid'}\n              bg={'green.300'}\n              rightIcon={<BiLike />}\n              type=\"button\"\n              onClick={() => dispatch(upvoteStreamer(_id))}\n              _hover={{\n                bg: 'green.500',\n                shadow: 'md',\n                color: 'white',\n              }}\n            >\n              Upvote\n            </Button>\n            <Text fontSize={16}>\n              Upvoted by{' '}\n              <Box as={'span'} fontWeight={600}>\n                {' '}\n                {upvotes}{' '}\n              </Box>\n              {upvotes === 1 ? 'user' : 'users'}\n            </Text>\n          </Box>\n          <Box display={'flex'} gap={4} flexDir={'column'}>\n            <Button\n              size={'lg'}\n              variant={'solid'}\n              bg={'red.300'}\n              leftIcon={<BiDislike />}\n              type=\"button\"\n              onClick={() => dispatch(downvoteStreamer(_id))}\n              _hover={{\n                bg: 'red.500',\n                shadow: 'md',\n                color: 'white',\n              }}\n            >\n              Downvote\n            </Button>\n            <Text fontSize={16}>\n              {' '}\n              Downvoted by{' '}\n              <Box as={'span'} fontWeight={600}>\n                {' '}\n                {downvotes}{' '}\n              </Box>\n              {downvotes === 1 ? 'user' : 'users'}\n            </Text>\n          </Box>\n        </Center>\n      </Flex>\n    </Flex>\n  );\n};\n","import { useNavigate, useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { fetchOneStreamer } from 'redux/streamers/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectLoading,\n  selectError,\n  selectOneStreamer,\n} from 'redux/streamers/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport { Button } from '@chakra-ui/react';\nimport { ArrowBackIcon } from '@chakra-ui/icons';\nimport { DetailedInfo } from 'components/DetailedInfo/DetailedInfo';\n\nexport default function Streamer() {\n  const { streamerId } = useParams();\n  const dispatch = useDispatch();\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const navigate = useNavigate();\n  const streamerInfo = useSelector(selectOneStreamer);\n\n  useEffect(() => {\n    dispatch(fetchOneStreamer(streamerId));\n  }, [dispatch, streamerId]);\n\n  return (\n    <>\n      {loading && !error && <Loader></Loader>}\n      {streamerInfo && !loading && !error && (\n        <>\n          <Button\n            type=\"button\"\n            variant={'ghost'}\n            size=\"lg\"\n            onClick={() => {\n              navigate('/streamers');\n            }}\n            leftIcon={<ArrowBackIcon></ArrowBackIcon>}\n          >\n            Back to list\n          </Button>\n          <DetailedInfo streamerInfo={streamerInfo}></DetailedInfo>\n        </>\n      )}\n    </>\n  );\n}\n","export const selectLoading = state => state.streamers.loading;\nexport const selectAllStreamers = state => state.streamers.allStreamers;\nexport const selectOneStreamer = state => state.streamers.selectedStreamer;\nexport const selectError = state => state.streamers.error;\n"],"names":["DetailedInfo","streamerInfo","dispatch","useDispatch","image","name","description","platform","_id","upvotes","downvotes","direction","base","lg","w","alignItems","justifyContent","p","mt","boxSize","borderRadius","src","alt","objectFit","boxShadow","fallbackSrc","flexDir","gap","width","fontFamily","color","fontSize","flexGrow","maxW","display","size","variant","bg","rightIcon","type","onClick","upvoteStreamer","_hover","shadow","as","fontWeight","leftIcon","downvoteStreamer","Streamer","streamerId","useParams","loading","useSelector","selectLoading","error","selectError","navigate","useNavigate","selectOneStreamer","useEffect","fetchOneStreamer","Loader","state","streamers","selectAllStreamers","allStreamers","selectedStreamer"],"sourceRoot":""}