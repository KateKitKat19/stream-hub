{"version":3,"file":"static/js/704.8fe1e647.chunk.js","mappings":"uMAoEA,UAvDiB,WACf,IAAQA,GAAeC,EAAAA,EAAAA,MAAfD,WACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAEpBC,GAAeJ,EAAAA,EAAAA,IAAYK,EAAAA,IAMjC,OAJAC,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,IAAiBZ,GAC3B,GAAE,CAACE,EAAUF,KAGZ,gCACGI,IAAYG,IAAS,SAAC,IAAD,KACtB,yBACGE,IAAiBL,IAAYG,IAC5B,iCACE,SAAC,KAAD,CAAMM,GAAG,aAAT,SAAsB,kBACtB,gBACEC,IAAKL,EAAaM,MAClBC,IAAKP,EAAaQ,KAClBC,MAAM,MACNC,OAAO,SAET,wBAAKV,EAAaQ,QAClB,uBAAIR,EAAaW,eACjB,uBAAIX,EAAaY,YACjB,4BACE,4BAAM,cAAYZ,EAAaa,QAAQ,aACvC,4BAAM,iBAAeb,EAAac,UAAU,gBAE9C,4BACE,mBACEC,KAAK,SACL,aAAW,SACXC,QAAS,kBAAMvB,GAASwB,EAAAA,EAAAA,IAAejB,EAAakB,KAA3C,EAHX,SAIC,YAGD,mBACEH,KAAK,SACL,aAAW,WACXC,QAAS,kBAAMvB,GAAS0B,EAAAA,EAAAA,IAAiBnB,EAAakB,KAA7C,EAHX,SAIC,uBASd,C,+HClEM,IAAMrB,EAAgB,SAAAuB,GAAK,OAAIA,EAAMC,UAAU1B,OAApB,EACrB2B,EAAqB,SAAAF,GAAK,OAAIA,EAAMC,UAAUE,YAApB,EAC1BtB,EAAoB,SAAAmB,GAAK,OAAIA,EAAMC,UAAUG,gBAApB,EACzBzB,EAAc,SAAAqB,GAAK,OAAIA,EAAMC,UAAUvB,KAApB,C","sources":["pages/Streamer.jsx","redux/streamers/selectors.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { fetchOneStreamer } from 'redux/streamers/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { upvoteStreamer, downvoteStreamer } from 'redux/streamers/operations';\nimport {\n  selectLoading,\n  selectError,\n  selectOneStreamer,\n} from 'redux/streamers/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport { Link } from 'react-router-dom';\n\nconst Streamer = () => {\n  const { streamerId } = useParams();\n  const dispatch = useDispatch();\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  const streamerInfo = useSelector(selectOneStreamer);\n\n  useEffect(() => {\n    dispatch(fetchOneStreamer(streamerId));\n  }, [dispatch, streamerId]);\n\n  return (\n    <>\n      {loading && !error && <Loader></Loader>}\n      <div>\n        {streamerInfo && !loading && !error && (\n          <>\n            <Link to=\"/streamers\">Back to list</Link>\n            <img\n              src={streamerInfo.image}\n              alt={streamerInfo.name}\n              width=\"300\"\n              height=\"300\"\n            ></img>\n            <h3>{streamerInfo.name}</h3>\n            <p>{streamerInfo.description}</p>\n            <p>{streamerInfo.platform}</p>\n            <div>\n              <span>Upvoted by {streamerInfo.upvotes} users</span>\n              <span> Downvoted by {streamerInfo.downvotes} users</span>\n            </div>\n            <div>\n              <button\n                type=\"button\"\n                aria-label=\"upvote\"\n                onClick={() => dispatch(upvoteStreamer(streamerInfo._id))}\n              >\n                Upvote\n              </button>\n              <button\n                type=\"button\"\n                aria-label=\"downvote\"\n                onClick={() => dispatch(downvoteStreamer(streamerInfo._id))}\n              >\n                Downvote\n              </button>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Streamer;\n","export const selectLoading = state => state.streamers.loading;\nexport const selectAllStreamers = state => state.streamers.allStreamers;\nexport const selectOneStreamer = state => state.streamers.selectedStreamer;\nexport const selectError = state => state.streamers.error;\n"],"names":["streamerId","useParams","dispatch","useDispatch","loading","useSelector","selectLoading","error","selectError","streamerInfo","selectOneStreamer","useEffect","fetchOneStreamer","to","src","image","alt","name","width","height","description","platform","upvotes","downvotes","type","onClick","upvoteStreamer","_id","downvoteStreamer","state","streamers","selectAllStreamers","allStreamers","selectedStreamer"],"sourceRoot":""}