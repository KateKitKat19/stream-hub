{"version":3,"file":"static/js/902.791b5dcc.chunk.js","mappings":"qMAEaA,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEvBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,4BACE,gBACEC,IAAKH,EAASI,MACdC,IAAKL,EAASM,KACdC,MAAM,MACNC,OAAO,SAET,0BAAI,SAAOR,EAASM,SACpB,yBAAG,WAASN,EAASS,gBACrB,yBAAG,oBAAkBT,EAASU,gBAEhC,4BACE,4BAAM,cAAYV,EAASW,QAAQ,aACnC,4BAAM,iBAAeX,EAASY,UAAU,gBAE1C,4BACE,mBACEC,KAAK,SACL,aAAW,SACXC,QAAS,kBAAMb,GAASc,EAAAA,EAAAA,IAAef,EAASgB,KAAvC,EAHX,SAIC,YAGD,mBACEH,KAAK,SACL,aAAW,WACXC,QAAS,kBAAMb,GAASgB,EAAAA,EAAAA,IAAiBjB,EAASgB,KAAzC,EAHX,SAIC,kBAMR,ECxCYE,EAAqB,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,YAApB,ECM1BC,EAAgB,WAC3B,IAAMrB,GAAWC,EAAAA,EAAAA,MACXqB,GAAgBC,EAAAA,EAAAA,IAAYN,GAMlC,OAJAO,EAAAA,EAAAA,YAAU,WACRxB,GAASyB,EAAAA,EAAAA,MACV,GAAE,CAACzB,IAGFsB,GACAA,EAAcI,OAAS,IACrB,wBACGJ,EAAcK,KAAI,SAAA5B,GACjB,OACE,yBACE,SAACD,EAAD,CAAcC,SAAUA,KADjBA,EAASgB,IAIrB,KAIR,EC1BYa,EAAO,WAClB,IAAM5B,GAAWC,EAAAA,EAAAA,MAwBjB,OACE,kBAAM4B,SAvBa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAETC,EAAO,CACX7B,KAAM2B,EAAKG,SAAS9B,KAAK+B,MACzB5B,YAAawB,EAAKG,SAAS3B,YAAY4B,MACvC3B,SAAUuB,EAAKG,SAAS1B,SAAS2B,OAEnCC,QAAQC,IACN,oEACAJ,GAEAlC,GACEuC,EAAAA,EAAAA,IAAY,CACVlC,KAAM2B,EAAKG,SAAS9B,KAAK+B,MACzB5B,YAAawB,EAAKG,SAAS3B,YAAY4B,MACvC3B,SAAUuB,EAAKG,SAAS1B,SAAS2B,SAGvCJ,EAAKQ,OACN,EAEC,WACE,kBAAOC,QAAQ,OAAf,SAAsB,WACtB,kBAAO7B,KAAK,OAAO8B,GAAG,OAAOrC,KAAK,UAElC,kBAAOoC,QAAQ,cAAf,SAA6B,kBAC7B,kBAAO7B,KAAK,OAAO8B,GAAG,cAAcrC,KAAK,iBAEzC,kBAAOoC,QAAQ,WAAf,SAA0B,eAC1B,oBAAQC,GAAG,WAAWrC,KAAK,WAA3B,WACE,mBAAQ+B,MAAM,SAAd,SAAuB,YACvB,mBAAQA,MAAM,UAAd,SAAwB,aACxB,mBAAQA,MAAM,SAAd,SAAuB,YACvB,mBAAQA,MAAM,OAAd,SAAqB,UACrB,mBAAQA,MAAM,SAAd,SAAuB,eAEzB,kBAAOxB,KAAK,SAASwB,MAAM,aAGhC,EC5Cc,SAASO,IACtB,OACE,4BACE,wBAAI,6CACJ,SAACf,EAAD,KACA,SAACP,EAAD,MAGL,C","sources":["components/StreamerCard/StreamerCard.jsx","redux/streamers/selectors.js","components/StreamersList/StreamersList.jsx","components/SubmissionForm/SubmissionForm.jsx","pages/StreamersPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { upvoteStreamer, downvoteStreamer } from 'redux/streamers/operations';\nexport const StreamerCard = ({ streamer }) => {\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div>\n        <img\n          src={streamer.image}\n          alt={streamer.name}\n          width=\"100\"\n          height=\"100\"\n        ></img>\n        <h3>Name: {streamer.name}</h3>\n        <p> About: {streamer.description}</p>\n        <p> Where to watch: {streamer.platform}</p>\n      </div>\n      <div>\n        <span>Upvoted by {streamer.upvotes} users</span>\n        <span> Downvoted by {streamer.downvotes} users</span>\n      </div>\n      <div>\n        <button\n          type=\"button\"\n          aria-label=\"upvote\"\n          onClick={() => dispatch(upvoteStreamer(streamer._id))}\n        >\n          Upvote\n        </button>\n        <button\n          type=\"button\"\n          aria-label=\"downvote\"\n          onClick={() => dispatch(downvoteStreamer(streamer._id))}\n        >\n          Downvote\n        </button>\n      </div>\n    </>\n  );\n};\n","export const selectLoading = state => state.streamers.loading;\nexport const selectAllStreamers = state => state.streamers.allStreamers;\nexport const selectError = state => state.streamers.error;\n","import { useEffect } from 'react';\n\nimport { StreamerCard } from 'components/StreamerCard/StreamerCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllStreamers } from 'redux/streamers/operations';\nimport { selectAllStreamers } from 'redux/streamers/selectors';\n\nexport const StreamersList = () => {\n  const dispatch = useDispatch();\n  const streamersList = useSelector(selectAllStreamers);\n\n  useEffect(() => {\n    dispatch(fetchAllStreamers());\n  }, [dispatch]);\n\n  return (\n    streamersList &&\n    streamersList.length > 0 && (\n      <ul>\n        {streamersList.map(streamer => {\n          return (\n            <li key={streamer._id}>\n              <StreamerCard streamer={streamer}></StreamerCard>\n            </li>\n          );\n        })}\n      </ul>\n    )\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { addStreamer } from 'redux/streamers/operations';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    const data = {\n      name: form.elements.name.value,\n      description: form.elements.description.value,\n      platform: form.elements.platform.value,\n    };\n    console.log(\n      'ðŸš€ ~ file: SubmissionForm.jsx:16 ~ handleSubmit ~ data:',\n      data\n    );\n      dispatch(\n        addStreamer({\n          name: form.elements.name.value,\n          description: form.elements.description.value,\n          platform: form.elements.platform.value,\n        })\n      );\n    form.reset();\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" name=\"name\" />\n\n      <label htmlFor=\"description\">Description:</label>\n      <input type=\"text\" id=\"description\" name=\"description\" />\n\n      <label htmlFor=\"platform\">Platform:</label>\n      <select id=\"platform\" name=\"platform\">\n        <option value=\"Twitch\">Twitch</option>\n        <option value=\"YouTube\">YouTube</option>\n        <option value=\"TikTok\">TikTok</option>\n        <option value=\"Kick\">Kick</option>\n        <option value=\"Rumble\">Rumble</option>\n      </select>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n};\n","import { StreamersList } from 'components/StreamersList/StreamersList';\nimport { Form } from 'components/SubmissionForm/SubmissionForm';\n\nexport default function StreamersPage() {\n  return (\n    <div>\n      <h2>We`re glad to see you in our Stream-Hub</h2>\n      <Form></Form>\n      <StreamersList></StreamersList>\n    </div>\n  );\n}\n"],"names":["StreamerCard","streamer","dispatch","useDispatch","src","image","alt","name","width","height","description","platform","upvotes","downvotes","type","onClick","upvoteStreamer","_id","downvoteStreamer","selectAllStreamers","state","streamers","allStreamers","StreamersList","streamersList","useSelector","useEffect","fetchAllStreamers","length","map","Form","onSubmit","e","preventDefault","form","currentTarget","data","elements","value","console","log","addStreamer","reset","htmlFor","id","StreamersPage"],"sourceRoot":""}